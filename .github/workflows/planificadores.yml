name: Compilar y ejecutar Planificadores.
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      planificadores_changed: ${{ steps.filter.outputs.planificadores }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          planificadores:
            - 'Planificadores/**'
            - '.github/workflows/planificadores.yml'

  run-planificadores:
    runs-on: ubuntu-latest
    needs:
      - paths-filter
    if: needs.paths-filter.outputs.planificadores_changed == 'true'
    steps:
    - uses: actions/checkout@v4
    - name: Compile Planificadores
      run: make -C Planificadores

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: pip

    - name: Download process data from gdrive
      run: |
        pip install gdown
        gdown -O Planificadores/data/ --folder ${{ secrets.GDRIVE_DATA }}

    - name: Run all combinations of algorithms and processes
      run: |
        cd Planificadores
        pip install -r scripts/requirements.txt
        ./scripts/run-all.sh ./planificador ./data ./outputs

    - name: Generar ploteo de m√©tricas
      run: |
        cd Planificadores
        mkdir -p outputs/plots
        python3 ./scripts/plot-metrics.py ./outputs/metrics.jsonl -o outputs/plots/

    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: planificadores
        path: Planificadores/outputs/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    needs:
      - paths-filter
    if: needs.paths-filter.outputs.planificadores_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Formatting check
        run: |
          find Planificadores/ -type f -name '*.c' -print0 -o -name '*.h' -print0 |
            xargs -0 clang-format -Werror --style=file -n

      - name: Run clang-tidy
        run: |
          sudo apt-get update
          sudo apt-get install -y bear

          bear -- make -C Planificadores

          find Planificadores/ -type f -name '*.c' -print0 -o -name '*.h' -print0 |
            xargs -0 clang-tidy -p compile_commands.json --config-file=.clang-tidy --warnings-as-errors='*'
